"use strict";(self.webpackChunkvchat_v_2=self.webpackChunkvchat_v_2||[]).push([[25],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),g=o,h=p["".concat(s,".").concat(g)]||p[g]||d[g]||i;return a?n.createElement(h,r(r({ref:t},u),{},{components:a})):n.createElement(h,r({ref:t},u))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},2457:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const i={sidebar_position:2,id:"core_package",title:"Flutter core package"},r=void 0,l={unversionedId:"flutter/core_package",id:"flutter/core_package",title:"Flutter core package",description:"about core package",source:"@site/docs/flutter/v_chat_core.md",sourceDirName:"flutter",slug:"/flutter/core_package",permalink:"/vchat-v2-docs/docs/flutter/core_package",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/flutter/v_chat_core.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"core_package",title:"Flutter core package"},sidebar:"tutorialSidebar",previous:{title:"Flutter intro",permalink:"/vchat-v2-docs/docs/flutter/intro"},next:{title:"Flutter message page package",permalink:"/vchat-v2-docs/docs/flutter/message_page"}},s={},c=[{value:"about core package",id:"about-core-package",level:2},{value:"to make the user online in the system you should call",id:"to-make-the-user-online-in-the-system-you-should-call",level:4},{value:"how to start new chat",id:"how-to-start-new-chat",level:2},{value:"how to support new languages",id:"how-to-support-new-languages",level:2},{value:"do more",id:"do-more",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"about-core-package"},"about core package"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"this package the boss of all packages"),(0,o.kt)("li",{parentName:"ul"},"the most important exported class is ",(0,o.kt)("inlineCode",{parentName:"li"},"VChatController")," this can be used to ",(0,o.kt)("inlineCode",{parentName:"li"},"init")," the package"),(0,o.kt)("li",{parentName:"ul"},"and create rooms and listen to events and perform custom http requests and listen to socket events and handle\nnavigation and handle notifications"),(0,o.kt)("li",{parentName:"ul"},"you can start use the package by creating new file in the app lets call it ",(0,o.kt)("inlineCode",{parentName:"li"},"v_chat_config.dart")),(0,o.kt)("li",{parentName:"ul"},"add the following code to it"),(0,o.kt)("li",{parentName:"ul"},"init method must be call ",(0,o.kt)("inlineCode",{parentName:"li"},"once")," at app life cycle!")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'Future initVChat(GlobalKey<NavigatorState> navigatorKey) async {\n  await VChatController.init(\n    navigatorKey: navigatorKey,\n    vChatConfig: VChatConfig(\n      googleMapsApiKey: "YOUR googleMapsApiKey",\n      encryptHashKey: "V_CHAT_SDK_V2_VERY_STRONG_KEY",\n      baseUrl: SConstants.vChatBaseUrl,\n      vPush: VPush(\n        enableVForegroundNotification: true,\n        vPushConfig: const VLocalNotificationPushConfig(),\n        fcmProvider: VChatFcmProver(),\n        oneSignalProvider: VChatOneSignalProver(\n          appId: "oneSignalKey",\n        ),\n      ),\n    ),\n    vNavigator: VNavigator(\n      roomNavigator: vDefaultRoomNavigator,\n      callNavigator: vDefaultCallNavigator,\n      messageNavigator: VMessageNavigator(\n        //this happens when user click on image in message page\n        toImageViewer: vDefaultMessageNavigator.toImageViewer,\n        //this happens when user click on show media drop down in message page\n        toViewChatMedia: vDefaultMessageNavigator.toViewChatMedia,\n        //this happens when user click on video in message page\n        toVideoPlayer: vDefaultMessageNavigator.toVideoPlayer,\n        //this happens when user click on see message information to know when the message send or delivered or seen at for `direct` chat\n        toSingleChatMessageInfo:\n        vDefaultMessageNavigator.toSingleChatMessageInfo,\n        //when user click on notification or lunch the app from notification this function will call to open the message page\n        toMessagePage: vDefaultMessageNavigator.toMessagePage,\n        //this happens when user click on see message information to know when the message send or delivered or seen at for `broadcast` chat\n        toBroadcastChatMessageInfo:\n        vDefaultMessageNavigator.toBroadcastChatMessageInfo,\n        //this happens when user click on see message information to know when the message send or delivered or seen at for `group` chat\n        toGroupChatMessageInfo: vDefaultMessageNavigator.toGroupChatMessageInfo,\n        //when user click on group title or icon to open group information to know more about this group like group members and more data\n        toGroupSettings: (context, data) {\n          Navigator.of(context).push(MaterialPageRoute(\n            builder: (context) => GroupRoomSettingsView(settingsModel: data),\n          ));\n        },\n        //when user click on peer user in direct chat title or icon to open peer chat user page you should handle this out of v chat scope\n        toSingleSettings: (context, data, identifier) {\n          Navigator.of(context).push(MaterialPageRoute(\n            builder: (context) => SingleRoomSettingsView(settingsModel: data),\n          ));\n        },\n        //when user click `broadcast` chat title or icon to open broadcast chat page you should handle this out of v chat scope\n        toBroadcastSettings: (context, data) {\n          Navigator.of(context).push(MaterialPageRoute(\n            builder: (context) =>\n                BroadcastRoomSettingsView(settingsModel: data),\n          ));\n        },\n        //when user click on group mention so need to open peer profile you should handle this out of v chat scope\n        toUserProfilePage: (context, identifier) {\n          Navigator.of(context).push(MaterialPageRoute(\n            builder: (context) => PeerProfileView(identifier: identifier),\n          ));\n        },\n      ),\n    ),\n  );\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"you need to call this function in ",(0,o.kt)("inlineCode",{parentName:"li"},"main.dart")," after ",(0,o.kt)("inlineCode",{parentName:"li"},"WidgetsFlutterBinding.ensureInitialized();")),(0,o.kt)("li",{parentName:"ul"},"create ",(0,o.kt)("inlineCode",{parentName:"li"},"final _navigatorKey = GlobalKey<NavigatorState>();")," and pass this key to the function and dont forget to add\nit to ",(0,o.kt)("inlineCode",{parentName:"li"},"MaterialApp")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"navigatorKey: _navigatorKey,")," this used to let user navigate when clicking to notification"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"vChatConfig: VChatConfig()")," this contain the configuration of the package"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"googleMapsApiKey")," set it or ignore it if you ignore the send location in chat will disappear"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"encryptHashKey")," must be strong and not changeable and must be same as ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," file in backend"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"baseUrl")," the sev base url of the v chat server without /api or v1 just like ",(0,o.kt)("inlineCode",{parentName:"li"},'Uri.parse("http://localhost:3001")'),"\nor ",(0,o.kt)("inlineCode",{parentName:"li"},'Uri.parse("http://domain.com")')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"VPush")," setup notifications provider ",(0,o.kt)("inlineCode",{parentName:"li"},"enableVForegroundNotification")," if this true then you will let v chat handle in\napp open notifications"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"vPushConfig")," this will help for let you add custom sound later"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fcmProvider")," to support firebase fcm make sure to configure it"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oneSignalProvider")," to support oneSignal make sure to configure it"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"vNavigator")," used to open some pages if you want to override it actions you can")),(0,o.kt)("h4",{id:"to-make-the-user-online-in-the-system-you-should-call"},"to make the user online in the system you should call"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"this api must be called after user login or register into your system the best place is in home ",(0,o.kt)("inlineCode",{parentName:"li"},"initState")," page"),(0,o.kt)("li",{parentName:"ul"},"usually the home open when user already has access if not you can put conditions and handle it"),(0,o.kt)("li",{parentName:"ul"},"this endpoint responsible for connect the user and make him online and receive messages")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"    ///get user saved login data from your system\n   final data = VAppPref.getMap(SStorageKeys.myProfile);\n    ///its recommended to set fullName if it available this data for the current login user\n    VChatController.I.profileApi.connect(\n      identifier: data!['identifier'],\n      fullName: null,\n    );\n")),(0,o.kt)("h2",{id:"how-to-start-new-chat"},"how to start new chat"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"call this api")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'VChatController.I.roomApi.openChatWith(\n  peerIdentifier: "identifier",\n);\n')),(0,o.kt)("h2",{id:"how-to-support-new-languages"},"how to support new languages"),(0,o.kt)("h2",{id:"do-more"},"do more"))}d.isMDXComponent=!0}}]);
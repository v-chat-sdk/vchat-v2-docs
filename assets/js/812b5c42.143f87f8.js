"use strict";(self.webpackChunkvchat_v_2=self.webpackChunkvchat_v_2||[]).push([[1712],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1,id:"intro",title:"Flutter intro"},o=void 0,s={unversionedId:"flutter/intro",id:"flutter/intro",title:"Flutter intro",description:"Project Structure",source:"@site/docs/flutter/intro.md",sourceDirName:"flutter",slug:"/flutter/intro",permalink:"/vchat-v2-docs/docs/flutter/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/flutter/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"intro",title:"Flutter intro"},sidebar:"tutorialSidebar",previous:{title:"change_log",permalink:"/vchat-v2-docs/docs/backend/change_log"},next:{title:"Flutter core package",permalink:"/vchat-v2-docs/docs/flutter/core_package"}},p={},l=[{value:"Project Structure",id:"project-structure",level:2},{value:"android setup",id:"android-setup",level:2},{value:"some important notes",id:"some-important-notes",level:2}],d={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"project-structure"},"Project Structure"),(0,r.kt)("p",null,"The V Chat SDK project is a mono-repo designed to handle the Flutter client. It is divided into several packages,\nincluding the following required and optional packages:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_sdk_core"},"v_chat_sdk_core")," ",(0,r.kt)("strong",{parentName:"p"},"(required)")," - Contains all HTTP requests,\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"VChatController"),", and manages ",(0,r.kt)("inlineCode",{parentName:"p"},"socket.io")," connections.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_room_page"},"v_chat_room_page")," ",(0,r.kt)("strong",{parentName:"p"},"(required)")," - Provides the UI for the chat room\npage.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_message_page"},"v_chat_message_page")," ",(0,r.kt)("strong",{parentName:"p"},"(required)")," - Provides the UI for the chat\nmessage page.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_utils"},"v_chat_utils")," ",(0,r.kt)("strong",{parentName:"p"},"(required)")," - Includes utility functions and translations\nfor all packages.\nOptional packages for extended functionality:")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_firebase_fcm"},"v_chat_firebase_fcm")," - Adds support for Firebase Cloud Messaging (FCM)\npush notifications.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_one_signal"},"v_chat_one_signal")," - Adds support for OneSignal push notifications. See\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://documentation.onesignal.com/docs/flutter-sdk-setup"},"documentation")," for configuration details.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_receive_share"},"v_chat_receive_share")," - Enables support for receiving media from\nother apps. Follow the ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/share_handler"},"documentation")," for configuration instructions.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/v_chat_web_rtc"},"v_chat_web_rtc")," - Adds support for WebRTC calls. Configure it using\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_webrtc"},"documentation"),". Please note that this is not 100% stable and relies on\nsome paid services for ",(0,r.kt)("a",{parentName:"p",href:"https://webrtc.org/getting-started/turn-server"},"TURN")," servers."))),(0,r.kt)("h2",{id:"android-setup"},"android setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"update this section in ",(0,r.kt)("inlineCode",{parentName:"li"},"android/build.gradle")),(0,r.kt)("li",{parentName:"ul"},"for full android manifest app\nexample ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hatemragab/superup/blob/5924d613fa76e03eee520e65fbaa97c8f052a8ab/apps/super_up_app/android/app/src/main/AndroidManifest.xml"},"see")),(0,r.kt)("li",{parentName:"ul"},"for full app apply v chat roles check\nout ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hatemragab/superup/tree/5924d613fa76e03eee520e65fbaa97c8f052a8ab/apps/super_up_app/android"},"this"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"buildscript {\n    ext.kotlin_version = '1.7.10'\n    repositories {\n        google()\n        mavenCentral()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.1.2'\n        classpath 'com.google.gms:google-services:4.3.13'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"update this section in ",(0,r.kt)("inlineCode",{parentName:"li"},"android/app/build.gradle")),(0,r.kt)("li",{parentName:"ul"},"enable ",(0,r.kt)("inlineCode",{parentName:"li"},"multiDexEnabled true")),(0,r.kt)("li",{parentName:"ul"},"update ",(0,r.kt)("inlineCode",{parentName:"li"},"compileSdkVersion 33")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"apply plugin: 'com.google.gms.google-services'")," if you use firebase FCM"),(0,r.kt)("li",{parentName:"ul"},"if you will use fcm connect you app by firebase\nflutter ",(0,r.kt)("a",{parentName:"li",href:"https://firebase.google.com/docs/flutter/setup?platform=android"},"cli")),(0,r.kt)("li",{parentName:"ul"},"if you use OneSignal then connect and configure\nthis ",(0,r.kt)("a",{parentName:"li",href:"https://documentation.onesignal.com/docs/flutter-sdk-setup"},"info")),(0,r.kt)("li",{parentName:"ul"},"Add These Permissions files to android/app/src/main/AndroidManifest.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<uses-permission android:name="android.permission.INTERNET"/>\n<uses-permission android:name="android.permission.RECORD_AUDIO"/>\n<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>\n<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>\n        \x3c!-- if you want to use loction share  --\x3e\n<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>\n<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>\n        \x3c!--    if you will use webRtc--\x3e\n<uses-permission android:name="android.permission.CAMERA"/>\n<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>\n<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>\n<uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>\n<queries>\n\x3c!-- If your app checks for SMS support --\x3e\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    <data android:scheme="sms"/>\n</intent>\n\x3c!-- If your app checks for call support --\x3e\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    <data android:scheme="tel"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    <category android:name="android.intent.category.BROWSABLE"/>\n    <data android:scheme="https"/>\n</intent>\n<intent>\n    <action android:name="android.support.customtabs.action.CustomTabsService"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    \x3c!-- If you don\'t know the MIME type in advance, set "mimeType" to "*/*". --\x3e\n    <data android:mimeType="image/*"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    \x3c!-- If you don\'t know the MIME type in advance, set "mimeType" to "*/*". --\x3e\n    <data android:mimeType="*/*"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.PROCESS_TEXT"/>\n    <data android:mimeType="text/plain"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.SEND"/>\n    \x3c!-- Replace with the MIME type that your app works with, if needed. --\x3e\n    <data android:mimeType="image/jpeg"/>\n</intent>\n<intent>\n    <action android:name="android.intent.action.VIEW"/>\n    <data\n            android:host="com.android.contacts"\n            android:mimeType="vnd.android.cursor.item/*"\n            android:scheme="content"/>\n</intent>\n</queries>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if you support share location you need to get the google api key and enable search for please that require you to\nenable billing"),(0,r.kt)("li",{parentName:"ul"},"and configure the app enable all service for map and for ios tool"),(0,r.kt)("li",{parentName:"ul"},"add this to your manifest ",(0,r.kt)("inlineCode",{parentName:"li"},"application")," tag before   ",(0,r.kt)("inlineCode",{parentName:"li"},"</application>"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<meta-data\n        android:name="com.google.android.geo.API_KEY"\n        android:value="AIzaSyAP-xxxxxxxxxxxxxx"/> replase AIzaSyAP-xxxxxxxxxxxxxx with your key\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"app crop activity")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<activity\n        android:name="com.yalantis.ucrop.UCropActivity"\n        android:screenOrientation="portrait"\n        android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if you enable ",(0,r.kt)("inlineCode",{parentName:"li"},"fcm")," push then add this meta inside the ",(0,r.kt)("inlineCode",{parentName:"li"},"application")," tag")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'\n<meta-data\n        android:name="com.google.firebase.messaging.default_notification_channel_id"\n        android:value="high_importance_channel"/>\n')),(0,r.kt)("p",null,"-Add These Tags to Application Tage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'android:requestLegacyExternalStorage="true"\nandroid:usesCleartextTraffic="true" \x3c!-- only if you use http not https, or you\'re testing the app--\x3e\n')),(0,r.kt)("h1",{id:"ios-permissions"},"Ios permissions"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"update and uncomment Podfile min version to 10.0 =>platform :ios, '",(0,r.kt)("inlineCode",{parentName:"li"},"10.0'")),(0,r.kt)("li",{parentName:"ol"},"add these permissions on the ",(0,r.kt)("inlineCode",{parentName:"li"},"ios/Runner/Info.plist")),(0,r.kt)("li",{parentName:"ol"},"full example for app use v chat ",(0,r.kt)("inlineCode",{parentName:"li"},"Podfile")," file can be\nfounded ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hatemragab/superup/blob/5924d613fa76e03eee520e65fbaa97c8f052a8ab/apps/super_up_app/ios/Podfile"},"here")),(0,r.kt)("li",{parentName:"ol"},"for ",(0,r.kt)("inlineCode",{parentName:"li"},"ios")," full example can be\nfounded ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hatemragab/superup/tree/5924d613fa76e03eee520e65fbaa97c8f052a8ab/apps/super_up_app/ios"},"here"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<key>NSCameraUsageDescription</key>\n        <string>to allow user to take photo and video for his ads and upload it to server</string>\n        <key>NSMicrophoneUsageDescription</key>\n            <string>to allow user to take video with voice for more info and add it to his ads and upload it to server</string>\n            <key>NSPhotoLibraryAddUsageDescription</key>\n            <string>vchatsdk would like to save photos from the app chat to your gallery</string>\n            <key>NSPhotoLibraryUsageDescription</key>\n            <string>to allow user to select photo for his ads and upload it to server</string>\n            <key>UIBackgroundModes</key>\n            <array>\n                <string>fetch</string>\n                <string>remote-notification</string>\n            </array>\n            <key>NSAppTransportSecurity</key>\n  <dict>\n  <key>NSAllowsArbitraryLoads</key>\n  <true/>\n</dict>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"replace all ",(0,r.kt)("inlineCode",{parentName:"li"},"vchatsdk")," by your app name ",(0,r.kt)("br",null))),(0,r.kt)("h2",{id:"some-important-notes"},"some important notes"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"while init the controller and pass\nthe ",(0,r.kt)("inlineCode",{parentName:"li"},'await VChatController.init( vChatConfig: VChatConfig(encryptHashKey:"$$THIS KEY$$""))')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"$$THIS KEY$$")," in above code must be the same as the .env ",(0,r.kt)("inlineCode",{parentName:"li"},"encryptHashKey")," must be the same otherwise will users will\nface login problem!")))}u.isMDXComponent=!0}}]);